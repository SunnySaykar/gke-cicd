steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/primal-buttress-441617-g3/sunny-repo/quickstart-image', './app1' ]
  id: 'Build Docker quickstart Image' 

  # images:
  # - 'us-central1-docker.pkg.dev/<your_project_id>/gke-repo/quickstart-image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/primal-buttress-441617-g3/sunny-repo/quickstart-image' ]
  id: 'Push Docker quickstart Image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'asia-south1-docker.pkg.dev/primal-buttress-441617-g3/sunny-repo-2/quickstart-image', './app1' ]
  id: 'Build Docker quickstart Image2' 

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'asia-south1-docker.pkg.dev/primal-buttress-441617-g3/sunny-repo-2/quickstart-image' ]
  id: 'Push Docker quickstart Image2'

#- name: 'gcr.io/cloud-builders/docker'
#  args: ['build', '-t', 'us-central1-docker.pkg.dev/primal-buttress-441617-g3/sunny-repo/flask-image', './app2' ]
#  id: 'Build Docker flask Image'
#
#  images:
#  - 'us-central1-docker.pkg.dev/<your_project_id>/gke-repo/quickstart-image'

#- name: 'gcr.io/cloud-builders/docker'
#  args: ['push', 'us-central1-docker.pkg.dev/primal-buttress-441617-g3/sunny-repo/flask-image' ]
#  id: 'Push Docker flask Image'
#
#- name: 'gcr.io/cloud-builders/docker'
#  args: ['build', '-t', 'us-central1-docker.pkg.dev/primal-buttress-441617-g3/sunny-repo-2/flask-image', './app2' ]
#  id: 'Build Docker flask Image2'
#
#- name: 'gcr.io/cloud-builders/docker'
#  args: ['push', 'us-central1-docker.pkg.dev/primal-buttress-441617-g3/sunny-repo-2/flask-image' ]
#  id: 'Push Docker flask Image2'


- name: 'google/cloud-sdk:latest'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
    gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1
    gcloud deploy apply --file deploy/dev.yaml --region=us-central1
  # gcloud deploy apply --file deploy/prod.yaml --region=us-central1
    gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=demo-btxmvxo --region=us-central1 --skaffold-file=skaffold.yaml

options:
  logging: CLOUD_LOGGING_ONLY
  








  


